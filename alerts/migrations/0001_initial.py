# Generated by Django 4.2.7 on 2025-09-24 23:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="告警标题")),
                ("message", models.TextField(verbose_name="告警消息")),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "严重"),
                            ("high", "高"),
                            ("medium", "中"),
                            ("low", "低"),
                            ("info", "信息"),
                        ],
                        max_length=20,
                        verbose_name="告警级别",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "活跃"),
                            ("acknowledged", "已确认"),
                            ("resolved", "已解决"),
                            ("suppressed", "已抑制"),
                            ("expired", "已过期"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="告警状态",
                    ),
                ),
                ("trigger_data", models.JSONField(default=dict, verbose_name="触发数据")),
                ("context_data", models.JSONField(default=dict, verbose_name="上下文数据")),
                ("first_occurred_at", models.DateTimeField(verbose_name="首次发生时间")),
                ("last_occurred_at", models.DateTimeField(verbose_name="最后发生时间")),
                (
                    "acknowledged_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="确认时间"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="解决时间"),
                ),
                (
                    "occurrence_count",
                    models.IntegerField(default=1, verbose_name="发生次数"),
                ),
                (
                    "notification_count",
                    models.IntegerField(default=0, verbose_name="通知次数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "告警记录",
                "verbose_name_plural": "告警记录",
                "db_table": "alerts",
                "ordering": ["-last_occurred_at"],
            },
        ),
        migrations.CreateModel(
            name="AlertRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="规则名称")),
                ("description", models.TextField(blank=True, verbose_name="规则描述")),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("threshold", "阈值告警"),
                            ("pattern", "模式匹配"),
                            ("anomaly", "异常检测"),
                            ("status", "状态告警"),
                            ("timeout", "超时告警"),
                        ],
                        max_length=20,
                        verbose_name="规则类型",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "严重"),
                            ("high", "高"),
                            ("medium", "中"),
                            ("low", "低"),
                            ("info", "信息"),
                        ],
                        max_length=20,
                        verbose_name="告警级别",
                    ),
                ),
                ("device_groups", models.JSONField(default=list, verbose_name="设备组")),
                ("conditions", models.JSONField(default=dict, verbose_name="告警条件")),
                (
                    "threshold_value",
                    models.FloatField(blank=True, null=True, verbose_name="阈值"),
                ),
                (
                    "operator",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("gt", "大于"),
                            ("gte", "大于等于"),
                            ("lt", "小于"),
                            ("lte", "小于等于"),
                            ("eq", "等于"),
                            ("ne", "不等于"),
                            ("contains", "包含"),
                            ("not_contains", "不包含"),
                            ("regex", "正则匹配"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="比较操作符",
                    ),
                ),
                ("pattern", models.TextField(blank=True, verbose_name="匹配模式")),
                ("enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "check_interval",
                    models.IntegerField(default=300, verbose_name="检查间隔(秒)"),
                ),
                (
                    "consecutive_count",
                    models.IntegerField(default=1, verbose_name="连续触发次数"),
                ),
                (
                    "recovery_condition",
                    models.JSONField(default=dict, verbose_name="恢复条件"),
                ),
                (
                    "suppression_duration",
                    models.IntegerField(default=3600, verbose_name="抑制时长(秒)"),
                ),
                (
                    "max_alerts_per_hour",
                    models.IntegerField(default=10, verbose_name="每小时最大告警数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "告警规则",
                "verbose_name_plural": "告警规则",
                "db_table": "alert_rules",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="渠道名称")),
                ("description", models.TextField(blank=True, verbose_name="渠道描述")),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "邮件"),
                            ("dingtalk", "钉钉"),
                            ("wechat", "微信"),
                            ("sms", "短信"),
                            ("webhook", "Webhook"),
                            ("slack", "Slack"),
                        ],
                        max_length=20,
                        verbose_name="渠道类型",
                    ),
                ),
                ("config", models.JSONField(default=dict, verbose_name="渠道配置")),
                ("enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "rate_limit",
                    models.IntegerField(default=60, verbose_name="速率限制(次/小时)"),
                ),
                ("retry_count", models.IntegerField(default=3, verbose_name="重试次数")),
                ("timeout", models.IntegerField(default=30, verbose_name="超时时间(秒)")),
                (
                    "severity_filter",
                    models.JSONField(default=list, verbose_name="级别过滤"),
                ),
                ("time_filter", models.JSONField(default=dict, verbose_name="时间过滤")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "通知渠道",
                "verbose_name_plural": "通知渠道",
                "db_table": "notification_channels",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待发送"),
                            ("sending", "发送中"),
                            ("success", "成功"),
                            ("failed", "失败"),
                            ("retry", "重试中"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="发送状态",
                    ),
                ),
                ("recipients", models.JSONField(default=list, verbose_name="接收者")),
                (
                    "subject",
                    models.CharField(blank=True, max_length=200, verbose_name="主题"),
                ),
                ("content", models.TextField(verbose_name="通知内容")),
                (
                    "response_data",
                    models.JSONField(blank=True, null=True, verbose_name="响应数据"),
                ),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
                ("retry_count", models.IntegerField(default=0, verbose_name="重试次数")),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="发送时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="alerts.alert",
                        verbose_name="关联告警",
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="alerts.notificationchannel",
                        verbose_name="通知渠道",
                    ),
                ),
            ],
            options={
                "verbose_name": "通知日志",
                "verbose_name_plural": "通知日志",
                "db_table": "notification_logs",
                "ordering": ["-created_at"],
            },
        ),
    ]

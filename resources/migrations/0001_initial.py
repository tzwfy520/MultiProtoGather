# Generated by Django 4.2.7 on 2025-09-25 07:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ServerGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="分组名称"),
                ),
                ("description", models.TextField(blank=True, verbose_name="分组描述")),
                (
                    "color",
                    models.CharField(
                        default="#1890ff", max_length=7, verbose_name="分组颜色"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="resources.servergroup",
                        verbose_name="父分组",
                    ),
                ),
            ],
            options={
                "verbose_name": "服务器分组",
                "verbose_name_plural": "服务器分组",
                "db_table": "server_groups",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ServerResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="服务器的显示名称", max_length=100, verbose_name="服务器名称"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        help_text="服务器的IP地址", verbose_name="IP地址"
                    ),
                ),
                (
                    "port",
                    models.PositiveIntegerField(
                        default=22, help_text="SSH连接端口", verbose_name="端口"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="SSH登录用户名", max_length=50, verbose_name="用户名"
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="SSH登录密码（加密存储）",
                        max_length=255,
                        null=True,
                        verbose_name="密码",
                    ),
                ),
                (
                    "private_key",
                    models.TextField(
                        blank=True, help_text="SSH私钥内容", null=True, verbose_name="私钥"
                    ),
                ),
                (
                    "os_type",
                    models.CharField(
                        choices=[
                            ("linux", "Linux"),
                            ("windows", "Windows"),
                            ("unix", "Unix"),
                            ("other", "其他"),
                        ],
                        default="linux",
                        max_length=20,
                        verbose_name="操作系统类型",
                    ),
                ),
                (
                    "os_version",
                    models.CharField(blank=True, max_length=100, verbose_name="操作系统版本"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("online", "在线"),
                            ("offline", "离线"),
                            ("checking", "检测中"),
                        ],
                        default="checking",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "last_online_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后在线时间"),
                ),
                (
                    "response_time",
                    models.FloatField(blank=True, null=True, verbose_name="响应时间(ms)"),
                ),
                (
                    "check_interval",
                    models.PositiveIntegerField(
                        default=300, help_text="状态检查的时间间隔", verbose_name="检查间隔(秒)"
                    ),
                ),
                (
                    "timeout",
                    models.PositiveIntegerField(
                        default=30, help_text="连接超时时间", verbose_name="超时时间(秒)"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="服务器标签列表", verbose_name="标签"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="额外的服务器信息", verbose_name="元数据"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="resources.servergroup",
                        verbose_name="服务器组",
                    ),
                ),
            ],
            options={
                "verbose_name": "服务器资源",
                "verbose_name_plural": "服务器资源",
                "db_table": "server_resources",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServerStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_status", models.CharField(max_length=20, verbose_name="原状态")),
                ("new_status", models.CharField(max_length=20, verbose_name="新状态")),
                (
                    "response_time",
                    models.FloatField(blank=True, null=True, verbose_name="响应时间(ms)"),
                ),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
                (
                    "check_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="检查时间"),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="resources.serverresource",
                        verbose_name="服务器",
                    ),
                ),
            ],
            options={
                "verbose_name": "服务器状态历史",
                "verbose_name_plural": "服务器状态历史",
                "db_table": "server_status_history",
                "ordering": ["-check_time"],
                "indexes": [
                    models.Index(
                        fields=["server", "check_time"],
                        name="server_stat_server__138002_idx",
                    ),
                    models.Index(
                        fields=["new_status", "check_time"],
                        name="server_stat_new_sta_a5a4d2_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="serverresource",
            index=models.Index(fields=["status"], name="server_reso_status_7fa6d4_idx"),
        ),
        migrations.AddIndex(
            model_name="serverresource",
            index=models.Index(
                fields=["ip_address"], name="server_reso_ip_addr_132476_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="serverresource",
            index=models.Index(fields=["group"], name="server_reso_group_i_3bfa69_idx"),
        ),
        migrations.AddIndex(
            model_name="serverresource",
            index=models.Index(
                fields=["created_at"], name="server_reso_created_0c319d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="serverresource",
            unique_together={("ip_address", "port")},
        ),
    ]

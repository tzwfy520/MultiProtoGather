# Generated by Django 4.2.7 on 2025-09-24 23:32

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CollectionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "成功"),
                            ("partial", "部分成功"),
                            ("failed", "失败"),
                            ("timeout", "超时"),
                            ("error", "错误"),
                        ],
                        max_length=20,
                        verbose_name="结果状态",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("text", "文本"),
                            ("json", "JSON"),
                            ("xml", "XML"),
                            ("csv", "CSV"),
                            ("binary", "二进制"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="数据类型",
                    ),
                ),
                ("raw_data", models.TextField(verbose_name="原始数据")),
                (
                    "parsed_data",
                    models.JSONField(blank=True, null=True, verbose_name="解析后数据"),
                ),
                ("data_size", models.IntegerField(default=0, verbose_name="数据大小(字节)")),
                (
                    "checksum",
                    models.CharField(blank=True, max_length=64, verbose_name="数据校验和"),
                ),
                (
                    "encoding",
                    models.CharField(
                        default="utf-8", max_length=20, verbose_name="编码格式"
                    ),
                ),
                (
                    "record_count",
                    models.IntegerField(blank=True, null=True, verbose_name="记录数量"),
                ),
                ("error_count", models.IntegerField(default=0, verbose_name="错误数量")),
                ("warning_count", models.IntegerField(default=0, verbose_name="警告数量")),
                ("processed", models.BooleanField(default=False, verbose_name="是否已处理")),
                (
                    "processed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="处理时间"),
                ),
                (
                    "processor",
                    models.CharField(blank=True, max_length=100, verbose_name="处理器"),
                ),
                (
                    "file_path",
                    models.CharField(blank=True, max_length=500, verbose_name="文件路径"),
                ),
                ("archived", models.BooleanField(default=False, verbose_name="是否已归档")),
                (
                    "archive_path",
                    models.CharField(blank=True, max_length=500, verbose_name="归档路径"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "采集结果",
                "verbose_name_plural": "采集结果",
                "db_table": "collection_results",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DataExport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="导出名称")),
                ("description", models.TextField(blank=True, verbose_name="导出描述")),
                (
                    "export_format",
                    models.CharField(
                        choices=[
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("json", "JSON"),
                            ("xml", "XML"),
                            ("pdf", "PDF"),
                        ],
                        max_length=20,
                        verbose_name="导出格式",
                    ),
                ),
                ("time_range_start", models.DateTimeField(verbose_name="开始时间")),
                ("time_range_end", models.DateTimeField(verbose_name="结束时间")),
                ("export_config", models.JSONField(default=dict, verbose_name="导出配置")),
                ("filters", models.JSONField(default=dict, verbose_name="过滤条件")),
                ("columns", models.JSONField(default=list, verbose_name="导出列")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待导出"),
                            ("processing", "处理中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="导出状态",
                    ),
                ),
                (
                    "file_path",
                    models.CharField(blank=True, max_length=500, verbose_name="文件路径"),
                ),
                (
                    "file_size",
                    models.IntegerField(blank=True, null=True, verbose_name="文件大小(字节)"),
                ),
                (
                    "record_count",
                    models.IntegerField(blank=True, null=True, verbose_name="记录数量"),
                ),
                ("download_count", models.IntegerField(default=0, verbose_name="下载次数")),
                (
                    "last_download_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后下载时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="过期时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "数据导出",
                "verbose_name_plural": "数据导出",
                "db_table": "data_exports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResultAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="分析名称")),
                ("description", models.TextField(blank=True, verbose_name="分析描述")),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("trend", "趋势分析"),
                            ("comparison", "对比分析"),
                            ("anomaly", "异常检测"),
                            ("statistics", "统计分析"),
                            ("pattern", "模式识别"),
                        ],
                        max_length=20,
                        verbose_name="分析类型",
                    ),
                ),
                ("time_range_start", models.DateTimeField(verbose_name="开始时间")),
                ("time_range_end", models.DateTimeField(verbose_name="结束时间")),
                (
                    "analysis_config",
                    models.JSONField(default=dict, verbose_name="分析配置"),
                ),
                ("filters", models.JSONField(default=dict, verbose_name="过滤条件")),
                (
                    "result_data",
                    models.JSONField(blank=True, null=True, verbose_name="分析结果"),
                ),
                ("summary", models.TextField(blank=True, verbose_name="结果摘要")),
                ("insights", models.JSONField(default=list, verbose_name="洞察发现")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待分析"),
                            ("running", "分析中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="分析状态",
                    ),
                ),
                ("progress", models.IntegerField(default=0, verbose_name="进度百分比")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "结果分析",
                "verbose_name_plural": "结果分析",
                "db_table": "result_analysis",
                "ordering": ["-created_at"],
            },
        ),
    ]
